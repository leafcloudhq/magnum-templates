heat_template_version: rocky

parameters:
  cluster_name:
    type: string
    description: (optional) Name for cluster.
    default: coe_cluster
  node_count:
    type: number
    default: 1
    description: The node count for this cluster.
  master_count:
    type: number
    default: 1
    description: The number of master nodes for this cluster.
  create_timeout:
    type: number
    default: 60
    description: Timeout for creating the cluster in minutes.
  cluster_template_name:
    type: string
    description: (optional) Name for cluster.
    default: coe_cluster_template
  flavor:
    type: string
    description: Flavor for the COE nodes to be created
    default: ec1.medium
    constraints:
      - custom_constraint: nova.flavor
  master_flavor:
    type: string
    description: Flavor for the COE masters to be created
    default: cn1.small
    constraints:
      - custom_constraint: nova.flavor
  image:
    type: string
    description: Image ID or image name to use for the COE nodes/masters
    constraints:
      - custom_constraint: glance.image
    default: fedora-coreos-33.20210426.3.0-openstack.x86_64
  external_network:
    type: string
    description: The external neutron network to attach the Cluster
    constraints:
      - custom_constraint: neutron.network
    default: external
  registry_enabled:
    type: boolean
    description: Enable the docker registry
    default: False
  master_lb_enabled:
    type: boolean
    description: clusters should have a load balancer for master nodes or not
    default: False
  floating_ip_enabled:
    type: boolean
    description: clusters should have a floating ip for master nodes or not
    default: False
  network_driver:
    type: string
    description: What network driver to use
    default: calico
  kube_tag:
    type: string
    description: What Kubernetes version to use
    default: v1.21.2
  cloud_provider_tag:
    type: string
    description: What cloud provider version version to use
    default: v1.20.2
  cinder_csi_plugin_tag:
    type: string
    description: What cinder CSI plugin version to use
    default: v1.20.2
  ingress_controller:
    type: string
    description: What ingress controller to use?
    default: nginx
  has_ingress_controller:
    type: boolean
    description: If an ingress controller should be deployed
    default: false
  magnum_auto_healer_tag:
    type: string
    description: What auto healer tag to use?
    default: v1.20.0
  auto_healing_enabled:
    type: boolean
    default: False
  auto_scaling_enabled:
    type: boolean
    default: False

conditions:
  has_ingress_controller:
    get_param: ingress_controller

resources:
  thatchers_k8s_tmp:
    type: OS::Magnum::ClusterTemplate
    properties:
      name: { get_param: cluster_template_name }
      flavor: { get_param: flavor }
      master_flavor: { get_param: master_flavor }
      image: { get_param: image }
      external_network: { get_param: external_network }
      coe: kubernetes
      server_type: vm
      registry_enabled: { get_param: registry_enabled }
      master_lb_enabled: { get_param: master_lb_enabled }
      floating_ip_enabled: { get_param: floating_ip_enabled }
      # docker_volume_size: 30
      network_driver: { get_param: network_driver }
      docker_storage_driver: overlay
      volume_driver: cinder
      labels:
        monitoring_enabled: False
        auto_scaling_enabled: { get_param: auto_scaling_enabled }
        auto_healing_enabled: { get_param: auto_healing_enabled }
        auto_healing_controller: magnum-auto-healer
        magnum_auto_healer_tag: { get_param: magnum_auto_healer_tag }
        master_lb_floating_ip_enabled: True
        cinder_csi_enabled: True
        container_infra_prefix: ghcr.io/stackhpc/
        ingress_controller: { get_param: magnum_auto_healer_tag }
        kube_tag: { get_param: kube_tag }
        cloud_provider_tag: { get_param: cloud_provider_tag }
        post_install_manifest_url: "https://raw.githubusercontent.com/leafcloudhq/magnum-templates/master/storageclass_manifests/storagclass-retain.yaml"
